أكيد، إليك شرح مفصل للـ **Workflow (سير العمل)** المقترح لإدارة الأقساط والمدفوعات في نظام إدارة العقود:

---

## 🧠 **الفكرة العامة**

تقسيم العملية إلى مرحلتين:

1. **توليد الأقساط المستحقة تلقائيًا** عند إنشاء عقد (rent\_installments).
2. **تسجيل المدفوعات يدويًا أو آليًا** (payments) وربطها بالأقساط.

---

## 🔄 **Workflow خطوة بخطوة**

---

### 🟢 1. **عند إنشاء عقد جديد (Create Contract)**

**حدث:** يتم إنشاء سجل جديد في جدول `contracts`.

**الخطوات:**

* يحصل النظام على:

  * `start_date` (تاريخ البداية)
  * `end_date` (تاريخ النهاية)
  * `rent_type` (شهري، سنوي، ...إلخ)
  * `rent_amount`

**الإجراء:**

* يقوم النظام تلقائيًا بحساب عدد الأقساط وفقًا لـ `rent_type`.

  * مثلًا: عقد شهري من 1 يناير إلى 31 ديسمبر = 12 قسط.
* ثم يتم إنشاء هذه الأقساط في جدول `rent_installments`.

**النتيجة:**

* أصبح لديك 12 سجلًا في `rent_installments` كل واحد يحتوي:

  * `due_date` = بداية كل شهر
  * `amount_due` = قيمة الإيجار الشهرية
  * `status` = "Due"

---

### 🟡 2. **قبل أو عند تاريخ الاستحقاق**

**الإجراء (اختياري):**

* يمكن تشغيل مهمة مجدولة (Scheduled Job/Cron) يوميًا:

  * تبحث عن الأقساط التي:

    * `status = 'Due'` و
    * `due_date < today`
  * ثم تغيّر الحالة إلى `Overdue`
  * وتضيف `late_fee` إن وجدت سياسة لذلك.

**النتيجة:**

* أي قسط لم يتم دفعه يتم تصنيفه كـ `Overdue`.

---

### 🟠 3. **عند دفع المستأجر (Payment Received)**

**حدث:** موظف يُسجّل عملية دفع عبر نموذج إدخال.

**المدخلات:**

* `contract_id` أو المستأجر
* `amount` المدفوع
* `payment_date`
* `payment_method`
* `rent_installment_id` ← **هذا هو الربط الأهم**

**الإجراء:**

* يتم إنشاء سجل جديد في جدول `payments`.
* النظام يحدّث القسط المرتبط:

  * يزيد `amount_paid` بقيمة الدفعة.
  * يغيّر `status` تلقائيًا:

    * إذا `amount_paid = amount_due` → `status = Paid`
    * إذا `amount_paid < amount_due` → `status = Partially Paid`

**النتيجة:**

* الدفعة موثقة بدقة، والقسط محدث، والتقارير تصبح دقيقة.

---

### 🔴 4. **مراقبة المدفوعات والتقارير (Dashboard & Reports)**

يمكنك الآن بناء ميزات مثل:

* قائمة الأقساط المستحقة اليوم.
* الأقساط المتأخرة فقط.
* مجموع ما دُفع من مستأجر معين.
* مجموع دخل العقار خلال فترة زمنية.

---

## 🎯 مثال عملي لتوضيح السلسلة الكاملة:

### عقد:

* يبدأ: 2025-01-01
* ينتهي: 2025-12-31
* الإيجار الشهري: 1000 ريال
* طريقة الدفع: شهريًا

### العملية:

| التاريخ    | الحدث                   | الوصف                                   |
| ---------- | ----------------------- | --------------------------------------- |
| 2025-01-01 | إنشاء العقد             | تم توليد 12 قسط شهري تلقائيًا           |
| 2025-01-01 | سُجّلت أول دفعة         | تم ربطها بالقسط رقم 1 - status: Paid    |
| 2025-02-01 | لم يتم دفع القسط الثاني | بعد 5 أيام → status أصبح: Overdue       |
| 2025-02-06 | دفع جزئي 500 ريال       | status: Partially Paid - remaining: 500 |
| 2025-02-10 | دفع 500 ريال أخرى       | status: Paid                            |

---

## ✅ مميزات هذا Workflow

* **أوتوماتيكي**: يقلل الحاجة للتدخل اليدوي.
* **مرن**: يدعم الدفعات الجزئية.
* **دقيق**: إمكانية معرفة الحالة المالية لأي مستأجر بدقة.
* **قابل للتوسع**: يمكنك بسهولة إضافة ميزات مثل الخصومات أو التنبيهات أو التقارير المتقدمة.

---

هل ترغب أن أكتب لك الكود الخاص بـ:

* **توليد الأقساط تلقائيًا عند إنشاء العقد**؟
* أم **تسجيل الدفعات وربطها بالقسط المناسب؟**
* أم **الـ Cron Job لتحديث الحالة؟**

أخبرني لأبدأ بأي جزء تحتاجه أولًا.
